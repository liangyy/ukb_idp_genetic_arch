# environment setup
source /vol/bmd/yanyul/miniconda3/etc/profile.d/conda.sh
conda activate ukb_idp

# script path
gw_ridge_script=/vol/bmd/yanyul/GitHub/ukb_idp_genetic_arch/methods/gw_ridge/run_gw_ridge.py

# script parameters
outerfold=5
innerfold=5

# input
genotype_bed_pattern=/vol/bmd/yanyul/UKB/ukb_idp_genetic_arch/subset_genotypes/IDP_HM3_finalPheno.chr{chr_num}.bed
phenotype_parquet=/vol/bmd/meliao/data/idp_phenotypes/2020-05-18_final-phenotypes.parquet
# previous output from run.screen
grm_cache=/vol/bmd/yanyul/UKB/ukb_idp_genetic_arch/gw_ridge/gw_ridge_default_theta_g_fold_5_5.tsv.gz.grm_cache.pkl.gz
# output
output=/vol/bmd/yanyul/UKB/ukb_idp_genetic_arch/gw_ridge/gw_ridge_beta_default_theta_g_fold_5_5.parquet
# link the run.screen cached GRM as the GRM for the training since they share exactly the same GRM.
if [[ ! -f $output.grm_cache.pkl.gz ]]
then
  ln -s $grm_cache $output.grm_cache.pkl.gz
fi

python $gw_ridge_script \
  --geno_bed_pattern $genotype_bed_pattern \
  --phenotype_parquet $phenotype_parquet \
  --nfold $outerfold $innerfold \
  --output $output \
  --train_full_model \
  > train.log 2>&1
